// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QD_API;

#nullable disable

namespace QD_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("QD_API.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("category");
                });

            modelBuilder.Entity("QD_API.Models.City", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Id"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("city");
                });

            modelBuilder.Entity("QD_API.Models.CityGetList", b =>
                {
                    b.Property<short?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short?>("Id"));

                    b.Property<string>("CityName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("cityGetLists");
                });

            modelBuilder.Entity("QD_API.Models.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<short>("CityId")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CustomerLastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("DocumentTypeId")
                        .HasColumnType("smallint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TelephoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("DocumentTypeId");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("QD_API.Models.DetailInvoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("TotalPriceInvoice")
                        .HasColumnType("numeric");

                    b.Property<int>("Units")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("detailInvoice");
                });

            modelBuilder.Entity("QD_API.Models.DocumentType", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Id"));

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("documentType");
                });

            modelBuilder.Entity("QD_API.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<long>("ProductImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReferenceCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("SaleProductPrice")
                        .HasColumnType("numeric");

                    b.Property<short>("SizeStandardId")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductImageId");

                    b.HasIndex("SizeStandardId");

                    b.ToTable("product");
                });

            modelBuilder.Entity("QD_API.Models.ProductImage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("IdIdentifier")
                        .HasColumnType("text");

                    b.Property<string>("ImageName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("productImage");
                });

            modelBuilder.Entity("QD_API.Models.SaleInvoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CustomId")
                        .HasColumnType("bigint");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("DeliveryDate")
                        .HasColumnType("date");

                    b.Property<long>("DetailInvoiceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomId");

                    b.HasIndex("DetailInvoiceId");

                    b.ToTable("saleInvoice");
                });

            modelBuilder.Entity("QD_API.Models.StandardSize", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Id"));

                    b.Property<decimal>("DimensionLenght")
                        .HasColumnType("numeric");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("standardSize");
                });

            modelBuilder.Entity("QD_API.Models.Customer", b =>
                {
                    b.HasOne("QD_API.Models.City", "City")
                        .WithMany("Customers")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QD_API.Models.DocumentType", "DocumentType")
                        .WithMany("Customers")
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("DocumentType");
                });

            modelBuilder.Entity("QD_API.Models.DetailInvoice", b =>
                {
                    b.HasOne("QD_API.Models.Product", "Product")
                        .WithMany("DetailInvoices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("QD_API.Models.Product", b =>
                {
                    b.HasOne("QD_API.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QD_API.Models.ProductImage", "ProductImage")
                        .WithMany("Products")
                        .HasForeignKey("ProductImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QD_API.Models.StandardSize", "SizeStandard")
                        .WithMany("Products")
                        .HasForeignKey("SizeStandardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ProductImage");

                    b.Navigation("SizeStandard");
                });

            modelBuilder.Entity("QD_API.Models.SaleInvoice", b =>
                {
                    b.HasOne("QD_API.Models.Customer", "Custom")
                        .WithMany("SaleInvoices")
                        .HasForeignKey("CustomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QD_API.Models.DetailInvoice", "DetailInvoice")
                        .WithMany("SaleInvoices")
                        .HasForeignKey("DetailInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Custom");

                    b.Navigation("DetailInvoice");
                });

            modelBuilder.Entity("QD_API.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("QD_API.Models.City", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("QD_API.Models.Customer", b =>
                {
                    b.Navigation("SaleInvoices");
                });

            modelBuilder.Entity("QD_API.Models.DetailInvoice", b =>
                {
                    b.Navigation("SaleInvoices");
                });

            modelBuilder.Entity("QD_API.Models.DocumentType", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("QD_API.Models.Product", b =>
                {
                    b.Navigation("DetailInvoices");
                });

            modelBuilder.Entity("QD_API.Models.ProductImage", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("QD_API.Models.StandardSize", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
